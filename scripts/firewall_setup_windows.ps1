# Script de Configura√ß√£o de Firewall para Windows
# Trabalho Pr√°tico 02 - Seguran√ßa Computacional

Write-Host "üî• Configurando Windows Firewall para SQL Injection Demo" -ForegroundColor Yellow
Write-Host "=========================================================" -ForegroundColor Yellow

function Check-Command {
    param($description)
    if ($LASTEXITCODE -eq 0) {
        Write-Host "‚úÖ $description" -ForegroundColor Green
    } else {
        Write-Host "‚ùå Erro: $description" -ForegroundColor Red
        exit 1
    }
}

$currentUser = [Security.Principal.WindowsIdentity]::GetCurrent()
$principal = New-Object Security.Principal.WindowsPrincipal($currentUser)
$isAdmin = $principal.IsInRole([Security.Principal.WindowsBuiltInRole]::Administrator)

if (-not $isAdmin) {
    Write-Host "‚ùå Este script precisa ser executado como Administrador!" -ForegroundColor Red
    Write-Host "üí° Clique com bot√£o direito no PowerShell e selecione 'Executar como administrador'" -ForegroundColor Yellow
    exit 1
}

Write-Host "‚úÖ Executando como Administrador" -ForegroundColor Green

Write-Host "üìù Configurando logging do Windows Firewall..." -ForegroundColor Cyan
try {
    netsh advfirewall set allprofiles logging allowedconnections enable
    netsh advfirewall set allprofiles logging droppedconnections enable
    netsh advfirewall set allprofiles logging filename "%systemroot%\system32\logfiles\firewall\pfirewall.log"
    netsh advfirewall set allprofiles logging maxfilesize 4096
    Write-Host "‚úÖ Logging configurado" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao configurar logging: $_" -ForegroundColor Red
}

Write-Host "üßπ Removendo regras existentes do projeto..." -ForegroundColor Cyan
try {
    netsh advfirewall firewall delete rule name="SQL Injection Demo - HTTP" >$null 2>&1
    netsh advfirewall firewall delete rule name="SQL Injection Demo - App" >$null 2>&1
    netsh advfirewall firewall delete rule name="SQL Injection Demo - MySQL" >$null 2>&1
    Write-Host "‚úÖ Regras antigas removidas" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Nenhuma regra anterior encontrada" -ForegroundColor Yellow
}

Write-Host "üéØ Configurando regra para aplica√ß√£o vulner√°vel (porta 5000)..." -ForegroundColor Cyan
try {
    netsh advfirewall firewall add rule name="SQL Injection Demo - App" dir=in action=allow protocol=TCP localport=5000
    Write-Host "‚úÖ Porta 5000 liberada para aplica√ß√£o" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao configurar porta 5000: $_" -ForegroundColor Red
}

Write-Host "üåê Configurando regra para HTTP (porta 80)..." -ForegroundColor Cyan
try {
    netsh advfirewall firewall add rule name="SQL Injection Demo - HTTP" dir=in action=allow protocol=TCP localport=80
    Write-Host "‚úÖ Porta 80 liberada para HTTP" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao configurar porta 80: $_" -ForegroundColor Red
}

Write-Host "üóÑÔ∏è Configurando regra para MySQL local (porta 3306)..." -ForegroundColor Cyan
try {
    netsh advfirewall firewall add rule name="SQL Injection Demo - MySQL" dir=in action=allow protocol=TCP localport=3306 remoteip=127.0.0.1,172.16.0.0/12
    Write-Host "‚úÖ Porta 3306 liberada apenas para acesso local" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Erro ao configurar porta 3306: $_" -ForegroundColor Red
}

Write-Host "üìä Configurando auditoria de eventos..." -ForegroundColor Cyan
try {
    auditpol /set /category:"Logon/Logoff" /success:enable /failure:enable
    
    auditpol /set /category:"Object Access" /success:enable /failure:enable
    
    Write-Host "‚úÖ Auditoria configurada" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è Erro ao configurar auditoria: $_" -ForegroundColor Yellow
}

Write-Host "" -ForegroundColor White
Write-Host "üìã Regras configuradas:" -ForegroundColor Yellow
Write-Host "=======================" -ForegroundColor Yellow
try {
    netsh advfirewall firewall show rule name="SQL Injection Demo - App"
    netsh advfirewall firewall show rule name="SQL Injection Demo - HTTP"
    netsh advfirewall firewall show rule name="SQL Injection Demo - MySQL"
} catch {
    Write-Host "‚ùå Erro ao exibir regras" -ForegroundColor Red
}

Write-Host "" -ForegroundColor White
Write-Host "üîç Para monitorar logs do Windows Firewall:" -ForegroundColor Cyan
Write-Host "Get-Content C:\Windows\System32\LogFiles\Firewall\pfirewall.log -Tail 20 -Wait" -ForegroundColor White
Write-Host "" -ForegroundColor White
Write-Host "üìù Para ver eventos de seguran√ßa:" -ForegroundColor Cyan
Write-Host "Get-WinEvent -FilterHashtable @{LogName='Security'; ID=4625,4624} -MaxEvents 10" -ForegroundColor White
Write-Host "" -ForegroundColor White
Write-Host "üõ†Ô∏è Para remover as regras depois:" -ForegroundColor Cyan
Write-Host "netsh advfirewall firewall delete rule name=`"SQL Injection Demo - App`"" -ForegroundColor White
Write-Host "netsh advfirewall firewall delete rule name=`"SQL Injection Demo - HTTP`"" -ForegroundColor White
Write-Host "netsh advfirewall firewall delete rule name=`"SQL Injection Demo - MySQL`"" -ForegroundColor White
Write-Host "" -ForegroundColor White
Write-Host "‚úÖ Windows Firewall configurado com sucesso!" -ForegroundColor Green
Write-Host "‚ö†Ô∏è  ATEN√á√ÉO: Este √© um ambiente de teste. Revise as regras antes de usar em produ√ß√£o!" -ForegroundColor Yellow 